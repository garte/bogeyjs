{"name":"bogeyJS","tagline":"bogeyJS dependency injection framework","body":"### What's the deal?\r\nOrganize your code by creating definitions of how to setup your different components that make up your application. These setup definitions are organized by defining modules which can be reused by different applications in different contexts.\r\n\r\nTheoretically it is possible to publish these modules for others to use in their projects. We are not talking about sharing code here, we're talking about setting up your code base within a certain context. Think of it as presets which construct your models, services, controllers, views - whatever you need to run your application on whatever platform that runs JS, be that for instance node.js or a browser.\r\n\r\n### Easy setup\r\nJust require the bogey components as shown in the documentation and you can use your code base in every context you wish. This thing will work in React, Angular, Ember... you name it. After setup it's just a single object waiting for you to pull your dependencies from.\r\n\r\n### Lean structure\r\nThis thing is quite basic and should work reliably for most of its use cases. There's not much to it in terms of \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}